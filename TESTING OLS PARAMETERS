# Posted here: http://stats.stackexchange.com/a/175629/67822

par(bg="gray80")

# The population has with given slope and intercept:

x <- seq(from = 0.0001, to = 100, by = 0.0001)
length(x)
y <- 0.4 * x + 10
population <- data.frame(x, y)
head(population)
nrow(population)


sam <- function(){
  s <- population[sample(nrow(population),100),] 
  s$y <- s$y + rnorm(100, 0, 15)
  s
}


betas <- 0
intercepts <- 0
for(i in 1:100){
  s <- sam()
  fit <- lm(y ~ x, data = s)
  betas[i] <- coef(fit)[2]
  intercepts[i] <- coef(fit)[1]
}

reg_lines <- data.frame(intercepts, betas)


hist(reg_lines$betas, col="blue4",
     xlab = "betas", main = "Hist. Beta Values Samples", border=F,
     freq=F, ylim=c(0,12))
lines(density(reg_lines$betas), col="brown", lwd=2)


mean(reg_lines$betas)
mean(reg_lines$intercepts)


sd(reg_lines$betas)
sd(reg_lines$intercepts)
quantile(reg_lines$intercepts, probs = c(0.025,0.05,0.5,0.95,0.975))
quantile(reg_lines$intercepts)

# Compare to summary of fit (fot just one random sample, S):

S <- population[sample(nrow(population), 100),] + rnorm(100, 10, 5)
fit <- lm(y ~ x, data = S)
summary(fit)



plot(y ~ x, data = S, pch=19, col="darkblue", 
     type ="n", xlim=c(0,100), ylim=c(0,50),
     main= "Fitted Lines of Regression")


for(i in 1: length(betas)){
  abline(reg_lines$intercept[i], reg_lines$betas[i], col= i)
}


# Now if we pick just one of these possible samples from this population:



plot(y ~ x, data = S, pch=19, 
     col="darkblue", xlim=c(0,100), ylim=c(0,60),
     main = "Just One Sample")

abline(fit, col = "turquoise", lwd = 3)
points(S$x, S$y, pch=19, col="darkblue")
abline(max(reg_lines$intercepts),max(reg_lines$betas), 
       lwd=2, col="firebrick", lty=2)
abline(min(reg_lines$intercepts),min(reg_lines$betas), 
       lwd=2, col="firebrick", lty=2)
points(y ~ x, pch = 19, cex=0.3, col="black")

# These are the SE's of the fit through this sample:

summary(fit)$coefficients[3:4]

# And the confidence intervals:

confint(fit)

# Estimated population beta (real = 0.4):

coef(fit)[2] + c(-1,1) * 1.96 * summary(fit)$coefficients[4]

# Estimated population intercept (real = 10):

coef(fit)[1] + c(-1,1) * 1.96 * summary(fit)$coefficients[3]
