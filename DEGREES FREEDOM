# SOURCE: http://stats.stackexchange.com/a/166382/67822

require(scatterplot3d)
require(rgl)
require(hepl)

#CONE FUNCTION:

cone3d <- function(base=c(0,0,0),tip=c(0,0,1),rad=1,n=30,draw.base=TRUE,qmesh=FALSE,
                   trans = par3d("userMatrix"), ...) {
  ax <- tip-base
  if (missing(trans) && !rgl.cur()) trans <- diag(4)
  ### is there a better way?
  if (ax[1]!=0) {
    p1 <- c(-ax[2]/ax[1],1,0)
    p1 <- p1/sqrt(sum(p1^2))
    if (p1[1]!=0) {
      p2 <- c(-p1[2]/p1[1],1,0)
      p2[3] <- -sum(p2*ax)
      p2 <- p2/sqrt(sum(p2^2))
    } else {
      p2 <- c(0,0,1)
    }
  } else if (ax[2]!=0) {
    p1 <- c(0,-ax[3]/ax[2],1)
    p1 <- p1/sqrt(sum(p1^2))
    if (p1[1]!=0) {
      p2 <- c(0,-p1[3]/p1[2],1)
      p2[3] <- -sum(p2*ax)
      p2 <- p2/sqrt(sum(p2^2))
    } else {
      p2 <- c(1,0,0)
    }
  } else {
    p1 <- c(0,1,0); p2 <- c(1,0,0)
  }
  degvec <- seq(0,2*pi,length=n+1)[-1]
  ecoord2 <- function(theta) {
    base+rad*(cos(theta)*p1+sin(theta)*p2)
  }
  i <- rbind(1:n,c(2:n,1),rep(n+1,n))
  v <- cbind(sapply(degvec,ecoord2),tip)
  if (qmesh) 
    ## minor kluge for quads -- draw tip twice
    i <- rbind(i,rep(n+1,n))
  if (draw.base) {
    v <- cbind(v,base)
    i.x <- rbind(c(2:n,1),1:n,rep(n+2,n))
    if (qmesh)  ## add base twice
      i.x <-  rbind(i.x,rep(n+2,n))
    i <- cbind(i,i.x)
  }
  if (qmesh) v <- rbind(v,rep(1,ncol(v))) ## homogeneous
  if (!qmesh)
    triangles3d(v[1,i],v[2,i],v[3,i],...)
  else
    return(rotate3d(qmesh3d(v,i,material=...), matrix=trans))
}     

#############################################################################


plot3d(0,0,0, pch="", xlab="", ylab="",zlab="",
              xlim=c(0,100), ylim=c(0,100), zlim=c(0,100))


rgl.bbox(color=c("#333377","black"), emission="#333377",
         specular="#3333FF", shininess=5, alpha=0.7) 

#Example: the point (35,50,80) has mean 55. So the equation for the plane perpendicular to
# and through [55  55  55] is 
#55a + 55b + 55c = D; 55*35 + 55*50 + 55*80 = -D since we are
# using the parametrization a x + b y + c z + d = 0. So D = -9075.

a <- c(55,55,55)
b <- c(0,0,0)
c <- c(35,50,80)


vec1=rbind(a, b)
segments3d(vec1, col="black", lwd=4)
cone3d(base=vec1[1,]-5, 
       rad=2,
       tip=vec1[1,],
       col="black")

spheres3d(c[1],c[2],c[3],r=2, col="yellow")


segments3d(rbind(c,b), col='red')
segments3d(rbind(a,c), col='black', lwd=2)

planes3d( a[1], a[2], a[3], -9075, alpha = 1, col='cyan1')



#Let's try another point on the plane: 55a + 55b + 55c -9075 = 0
# We can choose a = 10; b = 15, c will be -550-825+9075=55c; c=140.
# And the mean: (140+10+15)/3=55. Let's call this point d:

df<- c(90, 15)
last<- (-55*df[1] - 55*df[2] + 9075)/55
d <- c(df, last)
d
mean(d)

spheres3d(d[1],d[2],d[3],r=2, col="yellow")
segments3d(rbind(d,b), col='red')
segments3d(rbind(d,a), lwd=2, col='black')


df<- c(80, 80)
last<- (-55*df[1] - 55*df[2] + 9075)/55
d <- c(df, last)
d
mean(d)

spheres3d(d[1],d[2],d[3],r=2, col="yellow")
segments3d(rbind(d,b), col='red')
segments3d(rbind(d,a), lwd=2, col='black')



rgl.snapshot(filename = "plot21.png")


movie3d(spin3d(axis = c(0, 1, 0)), duration = 3,
        dir = getwd())
