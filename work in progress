par(bg="gray80")

x <- seq(from = 0.001, to = 100, by = 0.0001)
y <- 0.4 * x
population <- data.frame(x, y)
head(population)
nrow(population)


plot(y ~ x, pch = 19, col="firebrick")

S <- population[sample(nrow(population), 100),] + rnorm(100, 10, 5)

plot(y ~ x, data = S, pch=19, col="darkblue", xlim=c(0,100), ylim=c(0,60))
fit <- lm(y ~ x, data = S)
abline(fit, col = "turquoise", lwd = 3)


coef(fit)[2]
summary(fit)


sam <- function(){
  s <- population[sample(nrow(population),100),] 
  s$y <- s$y + rnorm(100, 0, 15)
  s
}
head(s)

betas <- 0
intercepts <- 0
for(i in 1:100){
  s <- sam()
  fit <- lm(y ~ x, data = s)
  betas[i] <- coef(fit)[2]
  intercepts[i] <- coef(fit)[1]
}

reg_lines <- data.frame(intercepts, betas)


hist(reg_lines$betas, col="blue4",
     xlab = "betas", main = "Hist. Beta Values Samples", border=F)

sd(reg_lines$betas)
mean(reg_lines$betas)
mean(reg_lines$intercepts)


plot(y ~ x, data = S, pch=19, col="darkblue", 
     type ="n", xlim=c(0,100), ylim=c(0,50))
fit <- lm(y ~ x, data = S)
abline(fit, col = "turquoise", lwd = 3)


for(i in 1: length(betas)){
  abline(reg_lines$intercept[i], reg_lines$betas[i], col= i)
}
